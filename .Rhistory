source('C:/Projects/Baseball/RStatcastUtils/R/Trackman_functions.R')
jz = read.csv("c:/projects/baseball/tmspin/fg_tm_data.csv")
head(jz)
jz = data.table(jz)
library(data.table)
jz = data.table(jz)
colnames(jz)
colnames(jz)
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,FALSE)]
head(jz)
?apply
apply(jz,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az"),get_transverse_spin,FALSE)
dimnames(jz)
?lapply
sapply(jz,get_transverse_spin,FALSE,USE.NAMES = TRUE)
apply(jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],2,get_transverse_spin,FALSE)
jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")]
lapply(jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],get_transverse_spin,FALSE)
lapply(jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],get_transverse_spin)
lapply(X = jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],FUN = get_transverse_spin, directional = FALSE)
jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")]
str(jz)
mapply(FUN = get_transverse_spin,jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],MoreArgs = list(FALSE))
testdf = jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")]
colnames(testdf) = c("release_extension","release_spin_rate","vx","vy","vz","ax","ay","az")
testdf
mapply(FUN = get_transverse_spin,jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],MoreArgs = list(directional = FALSE))
mapply(FUN = get_transverse_spin,jz[,c("release_extension","release_spin_rate","vx0","vy0","vz0","ax","ay","az")],FALSE)
jz[,new := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vy0,vz0,ax,ay,az,TRUE)]
jz[,new := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE)]
jz
jz[,list(new = get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE))]
jz[,list(get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE))]
t(jz[,list(get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE))])
newdf = jz[,list(get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE))]
newdf
str(newdf)
str(t(newdf))
t(jz[,list(get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,TRUE))])
data.frame(t(newdf))
mapply(get_transverse_spin,jz$release_extension,jz$release_spin_rate,jz$vx0,jz$vy0,jz$vz0,jz$ax,jz$ay,jz$az,FALSE)
len(jz)
nrow(jz)
mapply(get_transverse_spin,jz$release_extension,jz$release_spin_rate,jz$vx0,jz$vy0,jz$vz0,jz$ax,jz$ay,jz$az,TRUE)
mapply(get_transverse_spin,jz$release_extension,jz$release_spin_rate,jz$vx0,jz$vy0,jz$vz0,jz$ax,jz$ay,jz$az,TRUE,SIMPLIFY = TRUE)
t(mapply(get_transverse_spin,jz$release_extension,jz$release_spin_rate,jz$vx0,jz$vy0,jz$vz0,jz$ax,jz$ay,jz$az,TRUE))
library(data.table)
sample_fxn = function(a,b,double = FALSE){
if(double){
return(2*a*b)
}else{
return(a*b)
}
}
library(data.table)
sample_fxn = function(a,b,c){
return((a+b)*c)
}
df = data.table(A = 1:5,B=seq(1,10,2),c = 6:10)
df
library(data.table)
sample_fxn = function(x,y,z){
return((a+b)*c)
}
df = data.table(A = 1:5,B=seq(2,10,2),c = 6:10)
df
df[,new_column := sample_fxn(A,B,C)]
df
library(data.table)
sample_fxn = function(x,y,z){
return((x+y)*z)
}
df = data.table(A = 1:5,B=seq(2,10,2),c = 6:10)
df
df[,new_column := sample_fxn(A,B,C)]
df
df[,new_column := sample_fxn(A,B,2)]
df
df[,new_column := sample_fxn(A,B,C)]
sample_fxn = function(x,y,z){
return((x+y)*z)
}
str(df)
df[,new_column := sample_fxn(A,B,C)]
library(data.table)
sample_fxn = function(x,y,z){
return((x+y)*z)
}
df = data.table(A = 1:5,B=seq(2,10,2),C = 6:10)
df
df[,new_column := sample_fxn(A,B,C)]
df
df[,new_column := sample_fxn(A,B,2)]
df
library(data.table)
sample_fxn = function(x,y,z){
return((x+y)*z)
}
df = data.table(A = 1:5,B=seq(2,10,2),C = 6:10)
df
df[,new_column := sample_fxn(A,B,C)]
df
df[,new_column2 := sample_fxn(A,B,2)]
df
Sys.info()
library(devtools)
library(roxygen2)
document()
document()
document()
document()
document()
install.packages("Rtools")
library(RStatcastUtils)
jz = read.csv("c:/projects/baseball/tmspin/fg_tm_data.csv")
library(data.table)
library(RStatcastUtils)
newdf = mapply(get_transverse_spin,jz$release_extension,jz$release_spin_rate,jz$vx0,jz$vy0,jz$vz0,jz$ax,jz$ay,jz$az,direction = "ALL")
newdf
t(newdf)
jz = cbind(jz,t(newdf))
str(jz)
newdt = data.table(t(newdf))
newdt
str(newdt)
str(newdf)
newdf = as.data.frame(t(newdf))
newdf
str(newdf)
jz = read.csv("c:/projects/baseball/tmspin/fg_tm_data.csv")
setDT(jz)
jz
str(jz)
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az)]
jz
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "HEllo!")]
source('C:/Projects/Baseball/RStatcastUtils/R/Trackman_functions.R')
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "HEllo!")]
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "transverse!")]
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "transverse")]
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "x")]
jz$spinT
source('C:/Projects/Baseball/RStatcastUtils/R/Trackman_functions.R')
jz[,spinT := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az)]
jz[,spinTx := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "X")]
jz[,spinTy := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "y")]
source('C:/Projects/Baseball/RStatcastUtils/R/Trackman_functions.R')
jz[,spinTy := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "y")]
jz[,spinTz := get_transverse_spin(release_extension,release_spin_rate,vx0,vy0,vz0,ax,ay,az,direction = "z")]
head(jz)
